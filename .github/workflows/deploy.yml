# Workflow name
name: Deploying to K8s 

# How to trigger the workflow
on:
  push:
    branches:
      - main
  pull_request:
      branches:
        - main
        
env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_ID }}
  AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  EKS_CLUSTER: ${{ secrets.K8S_EKS_NAME }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME_ID }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN_KEY }}
  
jobs:
  deploy:
    name: Create build machine
    runs-on: ubuntu-latest
    steps:
      - # Checkout branches
        name: Checkout
        uses: actions/checkout@v3
      - # Buildkit builder instance
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - # login to DockerHub
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}
      - # Build context and push it to DockerHub
          name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ env.DOCKERHUB_USERNAME_ID }}/clockbox:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max
      - # Install kubectl
        name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
      - # Configure AWS Credentials
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - # K8s config
        name: Update kube config
        run: aws eks --region ${{ env.AWS_DEFAULT_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER }}
      - # Deploy to EKS
        name: Deploy to EKS
        run: |
          kubectl apply -f k8s_deployment.yml
      - # Verify the deployment
        name: Verify deployment
        run: kubectl get pods

  
